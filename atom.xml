<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CodeKevin&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-20T05:59:07.183Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CodeKevin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>static关键字学习</title>
    <link href="http://yoursite.com/2020/03/20/static%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://yoursite.com/2020/03/20/static%E5%85%B3%E9%94%AE%E5%AD%97/</id>
    <published>2020-03-20T05:51:04.000Z</published>
    <updated>2020-03-20T05:59:07.183Z</updated>
    
    <content type="html"><![CDATA[<ol><li>static定义的变量是类变量，即可以通过 <strong>类.变量</strong> 的方式进行访问，static定义的变量不属于任何对象，属于该类，任何对象都可以调用该变量，但是只有那一份</li><li>static定义的函数是类函数，他不属于任何对象，属于这个类，</li><li>static的函数只能调用static的函数，只能访问static的变量，static的变量和函数能通过类的方式访问，也可以通过对象的形式访问，不过用对象形式访问时不能获得对象的具体信息，</li><li>static的变量和函数在类的装载（进入类过程）的时候被初始化，static的初始化和对象的创建无关。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;static定义的变量是类变量，即可以通过 &lt;strong&gt;类.变量&lt;/strong&gt; 的方式进行访问，static定义的变量不属于任何对象，属于该类，任何对象都可以调用该变量，但是只有那一份&lt;/li&gt;
&lt;li&gt;static定义的函数是类函数，他不属于任何对象，
      
    
    </summary>
    
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="static" scheme="http://yoursite.com/tags/static/"/>
    
  </entry>
  
  <entry>
    <title>类和对象的理解</title>
    <link href="http://yoursite.com/2020/03/20/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/03/20/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%90%86%E8%A7%A3/</id>
    <published>2020-03-20T05:34:57.180Z</published>
    <updated>2020-03-07T12:22:13.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类和对象的理解"><a href="#类和对象的理解" class="headerlink" title="类和对象的理解"></a>类和对象的理解</h1><ol><li><p>类定义了对象长什么样，对象则是按照类的定义所制造出来的实体，一个类可以创建很多对象，每个对象有自己的数据</p></li><li><p>对象是实体，需要被创建，可以为我们做事前，类是规范，根据类的定义来创建对象</p></li><li><p>对象=属性+服务（数据：属性或状态。操作：函数）</p></li><li><p>封装：把数据和对数据的操作放在一起</p></li><li><p>类定义了对象中所具有的变量，这些变量称作为成员变量，每个对象都有自己的变量，和同一个类定义的其它对象是分开的</p></li><li><p>在函数中可以直接写成员变量的名字来访问成员变量，而对于函数的调用则是通过对象进行的</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类和对象的理解&quot;&gt;&lt;a href=&quot;#类和对象的理解&quot; class=&quot;headerlink&quot; title=&quot;类和对象的理解&quot;&gt;&lt;/a&gt;类和对象的理解&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;类定义了对象长什么样，对象则是按照类的定义所制造出来的实体，一个类可以创建很多对象
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>接口（interface）</title>
    <link href="http://yoursite.com/2020/03/20/%E6%8E%A5%E5%8F%A3%EF%BC%88interface%EF%BC%89/"/>
    <id>http://yoursite.com/2020/03/20/%E6%8E%A5%E5%8F%A3%EF%BC%88interface%EF%BC%89/</id>
    <published>2020-03-20T05:34:57.176Z</published>
    <updated>2020-03-20T05:37:23.565Z</updated>
    
    <content type="html"><![CDATA[<h1 id="接口（interface）"><a href="#接口（interface）" class="headerlink" title="接口（interface）"></a>接口（interface）</h1><p>接口是纯抽象类<br>    所有的成员函数都是抽象函数<br>    所有成员变量都是public static final<br> 接口规定了长什么样，但是不管里面有什么<br> 接口是一种class，与class的地位是一样的，即所有能使用class的地方都可以使用interface</p><hr><h1 id="实现接口"><a href="#实现接口" class="headerlink" title="实现接口"></a>实现接口</h1><ul><li>类用extends，接口用implements</li><li>类可以实现很多接口</li><li>接口可以继承接口，但不能继承类</li><li>接口不能实现接口</li></ul><hr><h1 id="面向接口的编程方式"><a href="#面向接口的编程方式" class="headerlink" title="面向接口的编程方式"></a>面向接口的编程方式</h1><ul><li>设计程序时先定义接口，再实现类</li><li>任何需要再函数间传入传出的一定是接口而不是具体的类</li><li>多人合作编程较为有利</li><li>代码量快速膨胀，受到批评</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;接口（interface）&quot;&gt;&lt;a href=&quot;#接口（interface）&quot; class=&quot;headerlink&quot; title=&quot;接口（interface）&quot;&gt;&lt;/a&gt;接口（interface）&lt;/h1&gt;&lt;p&gt;接口是纯抽象类&lt;br&gt;    所有的成员函数都是抽象
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>本地变量和成员变量</title>
    <link href="http://yoursite.com/2020/03/20/%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E5%92%8C%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2020/03/20/%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E5%92%8C%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F/</id>
    <published>2020-03-20T05:34:57.168Z</published>
    <updated>2020-03-07T12:30:26.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本地变量和成员变量"><a href="#本地变量和成员变量" class="headerlink" title="本地变量和成员变量"></a>本地变量和成员变量</h1><ol><li>定义在函数内部的变量为本地变量，定义在函数外面的变量是成员变量</li><li>本地变量的作用域和生存期都在函数内部</li><li>成员变量的作用域是类内部，生存期是对象的生存期</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本地变量和成员变量&quot;&gt;&lt;a href=&quot;#本地变量和成员变量&quot; class=&quot;headerlink&quot; title=&quot;本地变量和成员变量&quot;&gt;&lt;/a&gt;本地变量和成员变量&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;定义在函数内部的变量为本地变量，定义在函数外面的变量是成员变量&lt;/li&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>this关键字</title>
    <link href="http://yoursite.com/2020/03/20/this%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://yoursite.com/2020/03/20/this%E5%85%B3%E9%94%AE%E5%AD%97/</id>
    <published>2020-03-20T05:34:57.164Z</published>
    <updated>2020-03-07T12:24:54.449Z</updated>
    
    <content type="html"><![CDATA[<h1 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h1><p>this是成员函数的一个特殊的固有的本地变量，它表达了调用这个函数的那个对象</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;this关键字&quot;&gt;&lt;a href=&quot;#this关键字&quot; class=&quot;headerlink&quot; title=&quot;this关键字&quot;&gt;&lt;/a&gt;this关键字&lt;/h1&gt;&lt;p&gt;this是成员函数的一个特殊的固有的本地变量，它表达了调用这个函数的那个对象&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Systematic learn Java</title>
    <link href="http://yoursite.com/2020/03/20/Systematic%20learn%20Java/"/>
    <id>http://yoursite.com/2020/03/20/Systematic%20learn%20Java/</id>
    <published>2020-03-20T05:34:57.152Z</published>
    <updated>2020-03-11T13:02:59.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一个系统的Java学习网站https-cloudlandboy-github-io-myNote"><a href="#一个系统的Java学习网站https-cloudlandboy-github-io-myNote" class="headerlink" title="一个系统的Java学习网站https://cloudlandboy.github.io/myNote/#/"></a>一个系统的Java学习网站<a href="https://cloudlandboy.github.io/myNote/#/" target="_blank" rel="noopener">https://cloudlandboy.github.io/myNote/#/</a></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一个系统的Java学习网站https-cloudlandboy-github-io-myNote&quot;&gt;&lt;a href=&quot;#一个系统的Java学习网站https-cloudlandboy-github-io-myNote&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My second blog</title>
    <link href="http://yoursite.com/2020/03/17/My-second-blog/"/>
    <id>http://yoursite.com/2020/03/17/My-second-blog/</id>
    <published>2020-03-16T17:03:56.000Z</published>
    <updated>2020-03-17T15:59:47.769Z</updated>
    
    <content type="html"><![CDATA[<p>3月18日搭建完成自己的第一个博客，主要是基于Hexo框架完成的，其中所用到的工具主要有：</p><h2 id="node-js-npm-cnpm-git"><a href="#node-js-npm-cnpm-git" class="headerlink" title="node.js npm cnpm git"></a>node.js npm cnpm git</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;3月18日搭建完成自己的第一个博客，主要是基于Hexo框架完成的，其中所用到的工具主要有：&lt;/p&gt;
&lt;h2 id=&quot;node-js-npm-cnpm-git&quot;&gt;&lt;a href=&quot;#node-js-npm-cnpm-git&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/03/17/hello-world/"/>
    <id>http://yoursite.com/2020/03/17/hello-world/</id>
    <published>2020-03-16T16:02:04.584Z</published>
    <updated>2020-03-16T16:02:04.584Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
